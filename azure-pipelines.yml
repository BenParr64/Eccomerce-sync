# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dotNetFramework: 'net6.0'
  dotNetVersion: '6.0.x'
  targetRuntime: 'linux-x64'

steps:

# Build the app for .NET 6 framework
- task: UseDotNet@2
  inputs:
    version: $(dotNetVersion)
    includePreviewVersions: true
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build .NET 6 Application'


# Publish it as .NET 6 self-contained application for linux runtime
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True



- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()



# # Publish it as .NET 6 self-contained application for linux runtime
# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True

# # Package the file and uploads them as an artifact of the build
# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Build.ArtifactStagingDirectory)' 
#     artifactName: 'MinimalAPI'

# #Publish it to the Azure App Service
# - task: AzureWebApp@1
#   inputs:
#     appType: webAppLinux
#     azureSubscription: $(azureSPNName) #this is the name of the SPN
#     appName: $(azureAppServiceName) #App Service's unique name
#     package: $(Build.ArtifactStagingDirectory)/**/*.zip' #get it from your Azure portal

# # Build the app for .NET 6 framework
# steps:
# - task: UseDotNet@2
#   inputs:
#     version: $(dotNetVersion)
#     includePreviewVersions: true
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'Build .NET 6 Application'

# # Publish it as .NET 6 self-contained application for linux runtime
# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     publishWebProjects: True
#     arguments: '--configuration $(BuildConfiguration) --framework $(dotNetFramework) --runtime $(targetRuntime) --self-contained --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True

# # Package the file and uploads them as an artifact of the build
# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Build.ArtifactStagingDirectory)' 
#     artifactName: 'MinimalAPI'

# #Publish it to the Azure App Service
# - task: AzureWebApp@1
#   inputs:
#     appType: webAppLinux
#     azureSubscription: $(azureSPNName) #this is the name of the SPN
#     appName: $(azureAppServiceName) #App Service's unique name
#     package: $(Build.ArtifactStagingDirectory)/**/*.zip